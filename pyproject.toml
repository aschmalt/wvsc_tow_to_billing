[project]
name = "tow-conversion"
version = "0.4.0"
description = "Project to convert TOW csv files to invoice csv files for billing purposes."

readme = {file = "README.adoc", content-type = "text/asciidoc"}
license = "MIT"
license-files = ["LICENSE"]
authors = [
    {name = "Alan Schmaltz", email = "schmaltz.alan@gmail.com"},
]

classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 3 - Alpha",

    # Indicate who your project is intended for
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",

    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3.11",
]

requires-python = ">= 3.11"
dependencies = [
]

[project.optional-dependencies]
gui = [
    "tkinter"
]
dev = [
    "autopep8",
    "mypy",
    "pylint",
    "pytest",
    "pytest-cov",
    "pytest_check",
    "debugpy",
    "pyinstaller",
    "ruff",
]

[project.gui-scripts]
tow-converter = "tow_conversion.gui.converter.__main__:main"

[tool.autopep8]
max_line_length = 120

[tool.ruff]
# Set the maximum line length to match your project settings
line-length = 120

# Exclude directories and files
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
# Per-file ignores - disable import sorting for specific files
per-file-ignores = { "src/tow_conversion/__init__.py" = ["I001"] }

# Configure import sorting (isort replacement)
[tool.ruff.lint.isort]
known-first-party = ["tow_conversion"]
force-sort-within-sections = true
split-on-trailing-comma = true

# Configure pydocstyle rules
[tool.ruff.lint.pydocstyle]
convention = "numpy"  # Use Numpy docstring convention

[tool.pyinstaller]
# Example: specify the entry script and options
main-script = "src/tow_conversion/gui/converter.py"
onefile = true
console = false
windowed = true
name = "tow_conversion_gui"
